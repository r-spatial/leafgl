[{"path":"https://r-spatial.github.io/leafgl/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tim Appelhans. Maintainer, author, copyright holder. Colin Fay. Contributor. Robert Plummer. Contributor.           Leaflet.glify plugin Kent Johnson. Contributor. Sebastian Gatscha. Contributor. Olivier Roy. Contributor.","code":""},{"path":"https://r-spatial.github.io/leafgl/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Appelhans T (2024). leafgl: High-Performance 'WebGl' Rendering Package 'leaflet'. R package version 0.2.1.9008, https://r-spatial.github.io/leafgl/, https://github.com/r-spatial/leafgl.","code":"@Manual{,   title = {leafgl: High-Performance 'WebGl' Rendering for Package 'leaflet'},   author = {Tim Appelhans},   year = {2024},   note = {R package version 0.2.1.9008, https://r-spatial.github.io/leafgl/},   url = {https://github.com/r-spatial/leafgl}, }"},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"leafgl---performant-webgl-rendering-for-leaflet","dir":"","previous_headings":"","what":"High-Performance WebGl Rendering for Package leaflet","title":"High-Performance WebGl Rendering for Package leaflet","text":"R package fast web gl rendering features leaflet maps. ’s R port https://github.com/robertleeplummerjr/Leaflet.glify detailed information/documentation can found. Also, like get , make sure star original repo!","code":""},{"path":[]},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"stable-version-from-cran","dir":"","previous_headings":"Installation","what":"Stable version from CRAN","title":"High-Performance WebGl Rendering for Package leaflet","text":"","code":"install.packages(\"leafgl\")"},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"development-version-from-github","dir":"","previous_headings":"Installation","what":"Development version from Github","title":"High-Performance WebGl Rendering for Package leaflet","text":"","code":"devtools::install_github(\"r-spatial/leafgl\")"},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"what-does-it-do","dir":"","previous_headings":"","what":"What does it do?","title":"High-Performance WebGl Rendering for Package leaflet","text":"allows rendering large amount features leaflet map. exactly “large amount” , depends types features hardware/software rendering machine. Regarding 1. millions points problem, millions polygons might, depending complexity - .e. number vertices. regard 2., obviously amount RAM matter , suptle, problems can occur. Given ’s name, leafgl intended fully integrate leaflet package, though likely won’t 1:1 replacement respective leaflet::add* functions. example, given intention render/visualise many features possible need make compromise additional information allow part rendering. far, allow coloring features popups based one column feature attributes, hence provide popup content. may seem drastic, information costly terms performance/speed memory. end, wants wait map browser isn’t able render anyway…","code":""},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"what-doesnt-it-do","dir":"","previous_headings":"","what":"What doesn’t it do?","title":"High-Performance WebGl Rendering for Package leaflet","text":"starters, doesn’t guarantee working tomorrow. stage leafgl pre-alpha heavy development things likely change frequently. example, thinking shorter funtion names (e.g. addGlPolygons instead current addGlifyPolygons). Additionally, still figuring pathway best use order pass data R browser. result, rendering environments browser (RStudio viewer) may work properly approach stable implementation.","code":""},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"note","dir":"","previous_headings":"What doesn’t it do?","what":"NOTE","title":"High-Performance WebGl Rendering for Package leaflet","text":"Depending operating system browser, may see weird colors correspond ones specified. known work-around stage set opacity = 1. details inclined reader referred issue","code":""},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"what-can-i-do-to-help","dir":"","previous_headings":"","what":"What can I do to help?","title":"High-Performance WebGl Rendering for Package leaflet","text":"lot! First foremost can use often possible report issues/bugreports /feature request (see end page details). ideas enhance functionality without impacting performance much feel confident enough provide pull request, please don’t hesitate. Finally, proficient knowledge JavaScript want/know improve package way, much love hear !","code":""},{"path":[]},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"id_1-mio-points-on-a-map","dir":"","previous_headings":"Example usage","what":"1 Mio. points on a map","title":"High-Performance WebGl Rendering for Package leaflet","text":"render 1 Mio. points standard leaflet map.","code":"library(leaflet) library(leafgl) library(sf)  n = 1e6  df1 = data.frame(id = 1:n,                  x = rnorm(n, 10, 3),                  y = rnorm(n, 49, 1.8))  pts = st_as_sf(df1, coords = c(\"x\", \"y\"), crs = 4326)  options(viewer = NULL) # view in browser  leaflet() %>%   addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%   addGlPoints(data = pts, group = \"pts\") %>%   setView(lng = 10.5, lat = 49.5, zoom = 6)"},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"colouring-points-by-value-mapping","dir":"","previous_headings":"Example usage","what":"Colouring points by value mapping","title":"High-Performance WebGl Rendering for Package leaflet","text":"use library(colourvalues) can create color voctors blink eye!","code":"library(leaflet) library(leafgl) library(sf) library(colourvalues)  n = 1e6  df1 = data.frame(id = 1:n,                  x = rnorm(n, 10, 3),                  y = rnorm(n, 49, 1.8))  pts = st_as_sf(df1, coords = c(\"x\", \"y\"), crs = 4326)  cols = colour_values_rgb(pts$id, include_alpha = FALSE) / 255  leaflet() %>%   addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%   addGlPoints(data = pts, fillColor = cols, group = \"pts\") %>%   setView(lng = 10.5, lat = 49.5, zoom = 6)"},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"id_100k-polygons-on-a-map","dir":"","previous_headings":"Example usage","what":"100k polygons on a map","title":"High-Performance WebGl Rendering for Package leaflet","text":"reality, 97112 polygons… wants pedantic ? data downloaded https://download.geofabrik.de/europe/switzerland.html","code":"library(leaflet) library(leafgl) library(sf) library(colourvalues)  ch_lu = st_read(\"/media/timpanse/d8346522-ef28-4d63-9bf3-19fec6e13aab/bu_lenovo/software/testing/mapview/switzerland/landuse.shp\")  ch_lu = ch_lu[, c(1, 3, 4)] # don't handle NAs so far  options(viewer = NULL)  cols = colour_values_rgb(ch_lu$type, include_alpha = FALSE) / 255  leaflet() %>%   addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%   addGlPolygons(data = ch_lu,                  color = cols,                  popup = \"type\",                 group = \"pols\") %>%   setView(lng = 8.3, lat = 46.85, zoom = 9) %>%    addLayersControl(overlayGroups = \"pols\")"},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"shiny","dir":"","previous_headings":"","what":"Shiny","title":"High-Performance WebGl Rendering for Package leaflet","text":"Thanks @ColinFay leafgl dedicated shiny functions. Given leafgl produces leaflet map, need use leafglOutput ui call. server call can simply use renderLeaflet. example:","code":"library(leaflet) library(leafgl) library(sf) library(shiny)  n = 1e6  df1 = data.frame(id = 1:n,                  x = rnorm(n, 10, 3),                  y = rnorm(n, 49, 1.8))  pts = st_as_sf(df1, coords = c(\"x\", \"y\"), crs = 4326)  options(viewer = NULL) # view in browser  m = leaflet() %>%   addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%   addGlPoints(data = pts, group = \"pts\") %>%   setView(lng = 10.5, lat = 49.5, zoom = 4) %>%    addLayersControl(overlayGroups = \"pts\")  ui <- fluidPage(   leafglOutput(\"mymap\") )  server <- function(input, output, session) {   output$mymap <- renderLeaflet(m) }  shinyApp(ui, server)"},{"path":"https://r-spatial.github.io/leafgl/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"High-Performance WebGl Rendering for Package leaflet","text":"Please file Pull requests, bug reports feature requests https://github.com/r-spatial/leafgl/issues","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/addGlPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"add polylines to a leaflet map using Leaflet.glify — addGlPolylines","title":"add polylines to a leaflet map using Leaflet.glify — addGlPolylines","text":"Leaflet.glify web gl renderer plugin leaflet. See   https://github.com/robertleeplummerjr/Leaflet.glify details   documentation.","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/addGlPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add polylines to a leaflet map using Leaflet.glify — addGlPolylines","text":"","code":"addGlPolylines(   map,   data,   color = cbind(0, 0.2, 1),   opacity = 0.6,   group = \"glpolylines\",   popup = NULL,   label = NULL,   weight = 1,   layerId = NULL,   src = FALSE,   pane = \"overlayPane\",   ... )  addGlPoints(   map,   data,   fillColor = \"#0033ff\",   fillOpacity = 0.8,   radius = 10,   group = \"glpoints\",   popup = NULL,   label = NULL,   layerId = NULL,   src = FALSE,   pane = \"overlayPane\",   ... )  addGlPolygons(   map,   data,   color = cbind(0, 0.2, 1),   fillColor = color,   fillOpacity = 0.8,   group = \"glpolygons\",   popup = NULL,   label = NULL,   layerId = NULL,   src = FALSE,   pane = \"overlayPane\",   ... )"},{"path":"https://r-spatial.github.io/leafgl/reference/addGlPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add polylines to a leaflet map using Leaflet.glify — addGlPolylines","text":"map leaflet map add points/polygons . data sf/sp point/polygon data add map. color Object representing color. Can class integer, character color names, HEX codes random characters, factor, matrix, data.frame, list, json formula. See examples makeColorMatrix information. opacity feature opacity. Numeric 0 1. Note: expect funny results set < 1. group group name feature layer. popup Object representing popup. Can type character column names, formula, logical, data.frame matrix, Spatial, list JSON. length match number rows dataset, popup vector repeated match dimension. label either column name (currently supported polygons polylines) character vector used label. weight line width/thicknes pixels addGlPolylines. layerId layer id src whether pass data widget via file attachments. pane string defines pane layer. default \"overlayPane\". ... Used pass additional named arguments to_json & pass additional arguments underlying JavaScript functions. Typical use-cases include setting 'digits' round point coordinates pass different 'fragmentShaderSource' control shape points. Use 'point' (default) render circles thin black outline, 'simpleCircle' circles without outline 'sqaure' squares (without outline). fillColor fill color. fillOpacity fill opacity. radius point size pixels.","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/addGlPoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"add polylines to a leaflet map using Leaflet.glify — addGlPolylines","text":"MULTILINESTRINGs currently supported! Make sure cast data   LINETSRING first (e.g. using sf::st_cast(data, \"LINESTRING\"). MULTIPOLYGONs currently supported! Make sure cast data   POLYGON first (e.g. using sf::st_cast(data, \"POLYGON\").","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/addGlPoints.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"add polylines to a leaflet map using Leaflet.glify — addGlPolylines","text":"addGlPolylines(): add polylines leaflet map using Leaflet.glify addGlPoints(): add points leaflet map using Leaflet.glify addGlPolygons(): add polygons leaflet map using Leaflet.glify","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/addGlPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add polylines to a leaflet map using Leaflet.glify — addGlPolylines","text":"","code":"if (interactive()) { library(leaflet) library(leafgl) library(sf)  storms = st_as_sf(atlStorms2005)  cols = heat.colors(nrow(storms))  leaflet() %>%   addProviderTiles(provider = providers$CartoDB.Positron) %>%   addGlPolylines(data = storms, color = cols, popup = TRUE, opacity = 1) }  if (interactive()) { library(leaflet) library(leafgl) library(sf)  n = 1e5  df1 = data.frame(id = 1:n,                  x = rnorm(n, 10, 1),                  y = rnorm(n, 49, 0.8)) pts = st_as_sf(df1, coords = c(\"x\", \"y\"), crs = 4326)  cols = topo.colors(nrow(pts))  leaflet() %>%   addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%   addGlPoints(data = pts, fillColor = cols, popup = TRUE)  }  if (interactive()) { library(leaflet) library(leafgl) library(sf)  gadm = st_as_sf(gadmCHE) gadm = st_cast(gadm, \"POLYGON\") cols = grey.colors(nrow(gadm))  leaflet() %>%   addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%   addGlPolygons(data = gadm, color = cols, popup = TRUE) }"},{"path":"https://r-spatial.github.io/leafgl/reference/checkDim.html","id":null,"dir":"Reference","previous_headings":"","what":"checkDim — checkDim","title":"checkDim — checkDim","text":"Check length color vector. must match   number rows dataset.","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/checkDim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checkDim — checkDim","text":"","code":"checkDim(x, data)"},{"path":"https://r-spatial.github.io/leafgl/reference/checkDim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checkDim — checkDim","text":"x color vector data dataset","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/checkDimPop.html","id":null,"dir":"Reference","previous_headings":"","what":"checkDim — checkDimPop","title":"checkDim — checkDimPop","text":"Check length popup vector. must match   number rows dataset.","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/checkDimPop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checkDim — checkDimPop","text":"","code":"checkDimPop(x, data)"},{"path":"https://r-spatial.github.io/leafgl/reference/checkDimPop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checkDim — checkDimPop","text":"x popup vector data dataset","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/clearGlLayers.html","id":null,"dir":"Reference","previous_headings":"","what":"clearGlLayers — clearGlLayers","title":"clearGlLayers — clearGlLayers","text":"Clear Glify features","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/clearGlLayers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clearGlLayers — clearGlLayers","text":"","code":"clearGlLayers(map)"},{"path":"https://r-spatial.github.io/leafgl/reference/clearGlLayers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clearGlLayers — clearGlLayers","text":"map map widget","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/glify-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Use leafgl in shiny — leafglOutput","title":"Use leafgl in shiny — leafglOutput","text":"Use leafgl shiny","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/glify-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use leafgl in shiny — leafglOutput","text":"","code":"leafglOutput(outputId, width = \"100%\", height = 400)  renderLeafgl(expr, env = parent.frame(), quoted = TRUE)"},{"path":"https://r-spatial.github.io/leafgl/reference/glify-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use leafgl in shiny — leafglOutput","text":"outputId output variable read width, height width height map expr expression generates HTML widget env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/glify-shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use leafgl in shiny — leafglOutput","text":"UI rendering leafgl server function rendering leafgl","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/glify-shiny.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use leafgl in shiny — leafglOutput","text":"See leaflet::leafletOutput details.   renderLeafgl exported consistency. can just well   use leaflet::renderLeaflet (see example).   leafglOutput hand needed attach   necessary dependencies.","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/glify-shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use leafgl in shiny — leafglOutput","text":"","code":"if (interactive()) { library(shiny) library(leaflet) library(leafgl) library(sf)  n = 1e4 df1 = data.frame(id = 1:n,     x = rnorm(n, 10, 3),     y = rnorm(n, 49, 1.8)) pts = st_as_sf(df1, coords = c(\"x\", \"y\"), crs = 4326)  m = leaflet() %>%  addProviderTiles(provider = providers$CartoDB.DarkMatter) %>%  addGlPoints(data = pts, group = \"pts\") %>%  setView(lng = 10.5, lat = 49.5, zoom = 6) %>%  addLayersControl(overlayGroups = \"pts\")  ui <- fluidPage(     leafglOutput(\"mymap\") )  server <- function(input, output, session) {     output$mymap <- renderLeaflet(m) }  shinyApp(ui, server) }"},{"path":"https://r-spatial.github.io/leafgl/reference/makeColorMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"makeColorMatrix — makeColorMatrix","title":"makeColorMatrix — makeColorMatrix","text":"Transform object rgb color matrix","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/makeColorMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"makeColorMatrix — makeColorMatrix","text":"","code":"makeColorMatrix(x, data, palette, ...)"},{"path":"https://r-spatial.github.io/leafgl/reference/makeColorMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"makeColorMatrix — makeColorMatrix","text":"x Object representing color. Can class integer, numeric, Date, POSIX*, character color names HEX codes, factor, matrix, data.frame, list, json formula. data dataset palette Name color palette. colourvalues installed, passed colour_values_rgb. see available palettes, please use colour_palettes. colourvalues installed, palette passed colorNumeric. ... Passed colour_palettes colorNumeric.","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/makeColorMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"makeColorMatrix — makeColorMatrix","text":"","code":"{ ## For Integer/Numeric/Factor makeColorMatrix(23L) makeColorMatrix(23) makeColorMatrix(as.factor(23))  ## For POSIXt / Date makeColorMatrix(as.POSIXlt(Sys.time(), \"America/New_York\"), NULL) makeColorMatrix(Sys.time(), NULL) makeColorMatrix(Sys.Date(), NULL)  ## For matrix/data.frame makeColorMatrix(cbind(130,1,1), NULL) makeColorMatrix(matrix(1:99, ncol = 3, byrow = TRUE), data.frame(x=c(1:33))) makeColorMatrix(data.frame(matrix(1:99, ncol = 3, byrow = TRUE)), data.frame(x=c(1:33)))  ## For characters testdf <- data.frame(   texts = LETTERS[1:10],   vals = 1:10,   vals1 = 11:20 ) makeColorMatrix(\"red\", testdf) makeColorMatrix(\"val\", testdf)  ## For formulaes makeColorMatrix(~vals, testdf) makeColorMatrix(~vals1, testdf)  ## For JSON library(jsonify) makeColorMatrix(jsonify::to_json(data.frame(r = 54, g = 186, b = 1)), NULL)  ## For Lists makeColorMatrix(list(1,2), data.frame(x=c(1,2))) } #>           [,1]        [,2]      [,3] #> [1,] 0.2666667 0.003921569 0.3294118 #> [2,] 0.9921569 0.905882353 0.1450980"},{"path":"https://r-spatial.github.io/leafgl/reference/makePopup.html","id":null,"dir":"Reference","previous_headings":"","what":"makePopup — makePopup","title":"makePopup — makePopup","text":"Transform object popup","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/makePopup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"makePopup — makePopup","text":"","code":"makePopup(x, data)"},{"path":"https://r-spatial.github.io/leafgl/reference/makePopup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"makePopup — makePopup","text":"x Object representing popup data dataset","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"removeGlPoints — removeGlPoints","title":"removeGlPoints — removeGlPoints","text":"Remove points map, identified layerId;","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"removeGlPoints — removeGlPoints","text":"","code":"removeGlPoints(map, layerId)"},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"removeGlPoints — removeGlPoints","text":"map map widget layerId layerId remove","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPolygons.html","id":null,"dir":"Reference","previous_headings":"","what":"removeGlPolygons — removeGlPolygons","title":"removeGlPolygons — removeGlPolygons","text":"Remove polygons map, identified layerId;","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPolygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"removeGlPolygons — removeGlPolygons","text":"","code":"removeGlPolygons(map, layerId)"},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPolygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"removeGlPolygons — removeGlPolygons","text":"map map widget layerId layerId remove","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPolylines.html","id":null,"dir":"Reference","previous_headings":"","what":"removeGlPolylines — removeGlPolylines","title":"removeGlPolylines — removeGlPolylines","text":"Remove lines map, identified layerId;","code":""},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPolylines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"removeGlPolylines — removeGlPolylines","text":"","code":"removeGlPolylines(map, layerId)"},{"path":"https://r-spatial.github.io/leafgl/reference/removeGlPolylines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"removeGlPolylines — removeGlPolylines","text":"map map widget layerId layerId remove","code":""},{"path":[]},{"path":[]},{"path":"https://r-spatial.github.io/leafgl/news/index.html","id":"id_-bug-fixes-0-2-1-9008","dir":"Changelog","previous_headings":"","what":"🐛 bug fixes","title":"leafgl 0.2.1.9008 (2024-11-13)","text":"src version now works also shiny. #71","code":""},{"path":"https://r-spatial.github.io/leafgl/news/index.html","id":"id_-documentation-etc-0-2-1-9008","dir":"Changelog","previous_headings":"","what":"💬 documentation etc","title":"leafgl 0.2.1.9008 (2024-11-13)","text":"now pckgdown site - Thanks @olivroy #102","code":""},{"path":"https://r-spatial.github.io/leafgl/news/index.html","id":"id_-miscellaneous-0-2-1-9008","dir":"Changelog","previous_headings":"","what":"🍬 miscellaneous","title":"leafgl 0.2.1.9008 (2024-11-13)","text":"remove obsolete .travis.yml","code":""},{"path":"https://r-spatial.github.io/leafgl/news/index.html","id":"leafgl-0-2-1-9008","dir":"Changelog","previous_headings":"","what":"leafgl 0.2.1","title":"leafgl 0.2.1.9008 (2024-11-13)","text":"new features: methods can now labels/tooltips. Currently lines polygons support passing column name, points need predefined label vector. miscallaneous: methods now pane argument control layer ordering (thanks @trafficonese). #67 #64","code":""},{"path":"https://r-spatial.github.io/leafgl/news/index.html","id":"leafgl-0-2-1-9008-1","dir":"Changelog","previous_headings":"","what":"leafgl 0.2.0","title":"leafgl 0.2.1.9008 (2024-11-13)","text":"miscallaneous: update upstream javascript dependency 3.2.0","code":""},{"path":"https://r-spatial.github.io/leafgl/news/index.html","id":"leafgl-0-2-1-9008-2","dir":"Changelog","previous_headings":"","what":"leafgl 0.1.2","title":"leafgl 0.2.1.9008 (2024-11-13)","text":"new features: expose additional JavaScript arguments addGlPoints via magic dots. #54 & #60","code":""},{"path":"https://r-spatial.github.io/leafgl/news/index.html","id":"leafgl-0-2-1-9008-3","dir":"Changelog","previous_headings":"","what":"leafgl 0.1.1","title":"leafgl 0.2.1.9008 (2024-11-13)","text":"initial release.","code":""}]
